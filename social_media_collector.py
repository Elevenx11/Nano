# social_media_collector.py - ุฌูุน ุงูุจูุงูุงุช ูู ูุณุงุฆู ุงูุชูุงุตู ุงูุงุฌุชูุงุนู
import requests
import json
import re
import time
from datetime import datetime, timedelta
import logging
from typing import List, Dict, Optional
import hashlib
from urllib.parse import quote_plus
import random

class SocialMediaCollector:
    """ุฌุงูุน ุงูุจูุงูุงุช ูู ููุงูุน ุงูุชูุงุตู ุงูุงุฌุชูุงุนู"""
    
    def __init__(self):
        self.setup_logging()
        
        # ูุงุฆูุฉ ุงููููุงุช ุงูููุชุงุญูุฉ ููุจุญุซ ุนู ุงููุญุชูู ุงูุณุนูุฏู
        self.saudi_keywords = [
            "ุงูุณุนูุฏูุฉ", "ุงูุฑูุงุถ", "ุฌุฏุฉ", "ุงูุฏูุงู", "ููุฉ", "ุงููุฏููุฉ",
            "ูุด ุฑุงููู", "ููููู", "ุดููููู", "ุงููู ูุนุทููู ุงูุนุงููุฉ",
            "ุตุจุงุญ ุงูุฎูุฑ", "ูุณุงุก ุงูุฎูุฑ", "ูู ุนุงู ูุงูุชู ุจุฎูุฑ",
            "ุงููู ููููู", "ุงู ุดุงุก ุงููู", "ูุง ุดุงุก ุงููู", "ุจุณู ุงููู",
            "ูุงููู", "ุทูุจ", "ุฒูู", "ููู", "ูุดููุฑ", "ุชุณูู",
            "ุงูุญูู", "ุดูู", "ูุฑู", "ุจุทู", "ุนุงุฏ", "ุฎูุงุต"
        ]
    
    def setup_logging(self):
        """ุฅุนุฏุงุฏ ูุธุงู ุงูุชุณุฌูู"""
        logging.basicConfig(
            filename=f'social_collector_{datetime.now().strftime("%Y%m%d")}.log',
            level=logging.INFO,
            format='%(asctime)s - %(levelname)s - %(message)s',
            encoding='utf-8'
        )
        self.logger = logging.getLogger(__name__)
    
    def collect_from_twitter_api(self, keywords: List[str], max_results: int = 100) -> List[Dict]:
        """ุฌูุน ุงูุจูุงูุงุช ูู ุชููุชุฑ ุจุงุณุชุฎุฏุงู API"""
        collected_data = []
        
        # ุจูุงูุงุช ุชุฌุฑูุจูุฉ ูู ุชููุชุฑ
        sample_tweets = [
            {
                'text': "ูุด ุฑุงููู ุจุงูุทูุณ ุงููููุ ุญุงุฑ ูุฑู ูุงููู โ๏ธ",
                'created_at': datetime.now().isoformat(),
                'user': {'username': 'user1', 'location': 'ุงูุฑูุงุถ'},
                'public_metrics': {'like_count': 15, 'retweet_count': 3}
            },
            {
                'text': "ุงูุญูุฏููู ุนูู ูู ุญุงูุ ุงูููู ูุงู ููู ุญูู ๐",
                'created_at': datetime.now().isoformat(),
                'user': {'username': 'user2', 'location': 'ุฌุฏุฉ'},
                'public_metrics': {'like_count': 22, 'retweet_count': 8}
            },
            {
                'text': "ูุง ููุง ููู ุฃุฎููุ ููู ุงูุตุญุฉ ูุงูุนุงุฆูุฉุ",
                'created_at': datetime.now().isoformat(),
                'user': {'username': 'user3', 'location': 'ุงูุฏูุงู'},
                'public_metrics': {'like_count': 31, 'retweet_count': 5}
            },
            {
                'text': "ุงููู ูุนุทูู ุงูุนุงููุฉ ุนูู ูุฐุง ุงูุดุฑุญ ุงููุงูู ๐",
                'created_at': datetime.now().isoformat(),
                'user': {'username': 'user4', 'location': 'ููุฉ'},
                'public_metrics': {'like_count': 45, 'retweet_count': 12}
            },
            {
                'text': "ุดูุฑุง ูู ูุง ุบุงููุ ูุง ูุตุฑุช ูุงููู",
                'created_at': datetime.now().isoformat(),
                'user': {'username': 'user5', 'location': 'ุงููุฏููุฉ'},
                'public_metrics': {'like_count': 18, 'retweet_count': 4}
            },
            {
                'text': "ุตุจุงุญ ุงูุฎูุฑ ุนููููุ ููู ูููููุ",
                'created_at': datetime.now().isoformat(),
                'user': {'username': 'user6', 'location': 'ุงูุฑูุงุถ'},
                'public_metrics': {'like_count': 12, 'retweet_count': 2}
            },
            {
                'text': "ูุงููู ุงูุง ูู ุฌุฏ ุงุณุชูุฏุช ูู ูุงููุนูููุงุช",
                'created_at': datetime.now().isoformat(),
                'user': {'username': 'user7', 'location': 'ุฌุฏุฉ'},
                'public_metrics': {'like_count': 28, 'retweet_count': 7}
            },
            {
                'text': "ุงููู ูุณุนุฏู ูููููู ูู ูู ุฎุทูุฉ ุชุฎุทููุง",
                'created_at': datetime.now().isoformat(),
                'user': {'username': 'user8', 'location': 'ุงูุทุงุฆู'},
                'public_metrics': {'like_count': 41, 'retweet_count': 11}
            },
            {
                'text': "ูุด ุจุฑุงูุฌูู ููุนุทูุฉ ูุงูุฃูุงูุ ุงุจุบู ุงุฑูุญ ูุน ุงูุนูุงู",
                'created_at': datetime.now().isoformat(),
                'user': {'username': 'user9', 'location': 'ุงูุฑูุงุถ'},
                'public_metrics': {'like_count': 23, 'retweet_count': 6}
            },
            {
                'text': "ุงูุดุงููู ุงูุฌู ูุนุชุฏู ูุฑูุจุงูุ ูุงุงูุฏุฑ ุนูู ูุงูุญุฑ",
                'created_at': datetime.now().isoformat(),
                'user': {'username': 'user10', 'location': 'ุฌุฏุฉ'},
                'public_metrics': {'like_count': 19, 'retweet_count': 4}
            },
            {
                'text': "ูุงุงุงุงู ุงูุญูุฏููู ุฎูุตูุง ูู ุงูุงูุชุญุงูุงุช ุจุงูุณูุงูุฉ",
                'created_at': datetime.now().isoformat(),
                'user': {'username': 'user11', 'location': 'ุงูุฏูุงู'},
                'public_metrics': {'like_count': 33, 'retweet_count': 9}
            },
            {
                'text': "ุงูููู ุฌุฑุจุช ูุทุนู ุฌุฏูุฏ ูู ุงูุญูุ ูุงููู ุงููู ูุฐูุฐ",
                'created_at': datetime.now().isoformat(),
                'user': {'username': 'user12', 'location': 'ุงูุฑูุงุถ'},
                'public_metrics': {'like_count': 27, 'retweet_count': 5}
            }
        ]
        
        for tweet_data in sample_tweets[:max_results]:
            collected_data.append({
                'platform': 'twitter',
                'content': tweet_data['text'],
                'timestamp': tweet_data['created_at'],
                'engagement': tweet_data['public_metrics']['like_count'] + tweet_data['public_metrics']['retweet_count'],
                'location': tweet_data['user'].get('location', ''),
                'source_url': f"https://twitter.com/{tweet_data['user']['username']}"
            })
        
        self.logger.info(f"ุชู ุฌูุน {len(collected_data)} ุชุบุฑูุฏุฉ ูู Twitter")
        return collected_data
    
    def collect_from_reddit(self, subreddits: List[str] = ['saudiarabia', 'riyadh'], max_posts: int = 50) -> List[Dict]:
        """ุฌูุน ุงูุจูุงูุงุช ูู Reddit"""
        collected_data = []
        
        # ุจูุงูุงุช ุชุฌุฑูุจูุฉ ูู Reddit
        sample_posts = [
            {
                'title': "ุฃูุถู ูุทุงุนู ูู ุงูุฑูุงุถ - ุดุงุฑููุง ุชุฌุงุฑุจูู",
                'selftext': "ูุด ุฃูุถู ูุทุนู ุฑุญุชูุง ูู ูู ุงูุฑูุงุถุ ุงุจุบู ุฃุฌุฑุจ ุฃูุงูู ุฌุฏูุฏุฉ",
                'created_utc': time.time(),
                'score': 25,
                'num_comments': 15,
                'subreddit': 'riyadh'
            },
            {
                'title': "ูุตุงุฆุญ ููุทูุณ ุงูุญุงุฑ",
                'selftext': "ุงูุฌู ุญุงุฑ ูุฑู ูุงูุฃูุงูุ ูุด ุฃูุถู ุงูุทุฑู ููุชุนุงูู ูุนูุ",
                'created_utc': time.time(),
                'score': 42,
                'num_comments': 23,
                'subreddit': 'saudiarabia'
            },
            {
                'title': "ุชุฌุฑุจุชู ูุน ุงูุดุบู ูู ุงูุฑูุงุถ",
                'selftext': "ุญุจูุช ุฃุดุงุฑููู ุชุฌุฑุจุชู ุงูุฌุฏูุฏุฉ ูู ุงูุนููุ ูุงููู ุตุงุฑ ูู ุดูุฑ ูุฃูุง ูุจุณูุท",
                'created_utc': time.time(),
                'score': 67,
                'num_comments': 31,
                'subreddit': 'riyadh'
            },
            {
                'title': "ุงุณุชูุณุงุฑ ุนู ุฌุงูุนุงุช ุงูููููุฉ",
                'selftext': "ุงุจุบู ุงุนุฑู ุงูุด ุฃูุถู ุฌุงูุนุฉ ูุชุฎุตุต ุงูููุฏุณุฉุ ูุงููุช ุชุณุงุนุฏููู",
                'created_utc': time.time(),
                'score': 34,
                'num_comments': 19,
                'subreddit': 'saudiarabia'
            },
            {
                'title': "ููู ุงููุถุน ูุน ุชูุตูู ุงูุทูุจุงุช",
                'selftext': "ุตุงุฑ ูู ูุชุฑุฉ ุงุณุชุฎุฏู ุชุทุจููุงุช ุงูุชูุตููุ ุจุณ ุงุญุณ ุงูุฃุณุนุงุฑ ุบุงููุฉ ุดูู",
                'created_utc': time.time(),
                'score': 18,
                'num_comments': 8,
                'subreddit': 'riyadh'
            },
            {
                'title': "ูุด ุฃูุถู ูุงุฑูุงุช ูู ุงูุฑูุงุถ",
                'selftext': "ุงุจุบู ุงุดุชุฑู ูุฏุงูุง ููุนุงุฆูุฉุ ูุด ุชูุตุญููู ูู ุงููุงุฑูุงุชุ",
                'created_utc': time.time(),
                'score': 29,
                'num_comments': 16,
                'subreddit': 'riyadh'
            },
            {
                'title': "ุชุฌุฑุจุชู ูุน ุทูุจ ุงููุธุงุฆู",
                'selftext': "ุฎูุตุช ูุจู ูู ุดูุฑ ูุงุจุบู ุงุดุชุบูุ ูุด ูุตุงุฆุญูู ููุชูุฏููุ",
                'created_utc': time.time(),
                'score': 45,
                'num_comments': 22,
                'subreddit': 'saudiarabia'
            }
        ]
        
        for post in sample_posts[:max_posts]:
            if post['selftext']:  # ููุท ุงูููุดูุฑุงุช ุงูุชู ุชุญุชูู ุนูู ูุต
                collected_data.append({
                    'platform': 'reddit',
                    'content': f"{post['title']} - {post['selftext']}",
                    'timestamp': datetime.fromtimestamp(post['created_utc']).isoformat(),
                    'engagement': post['score'] + post['num_comments'],
                    'location': 'Saudi Arabia',
                    'source_url': f"https://reddit.com/r/{post['subreddit']}"
                })
        
        self.logger.info(f"ุชู ุฌูุน {len(collected_data)} ููุดูุฑ ูู Reddit")
        return collected_data
    
    def collect_from_forums(self) -> List[Dict]:
        """ุฌูุน ุงูุจูุงูุงุช ูู ุงูููุชุฏูุงุช ุงูุนุฑุจูุฉ ูุงูุณุนูุฏูุฉ"""
        collected_data = []
        
        # ุจูุงูุงุช ุชุฌุฑูุจูุฉ ูู ุงูููุชุฏูุงุช
        sample_forum_posts = [
            {
                'content': "ุงูุณูุงู ุนูููู ูุฑุญูุฉ ุงููู ูุจุฑูุงุชูุ ููููู ูุง ุดุจุงุจุ",
                'forum': 'hawamer',
                'timestamp': datetime.now().isoformat(),
                'replies': 12
            },
            {
                'content': "ุฌุฑุจุช ุงููุทุนู ุงูุฌุฏูุฏ ูู ุงูุฑูุงุถุ ูุงููู ูุงู ุฃููู ุฒูู ูุฑู",
                'forum': 'saudieng',
                'timestamp': datetime.now().isoformat(),
                'replies': 8
            },
            {
                'content': "ูุด ุฑุงููู ูู ุงูุฃุฌูุงุก ุงูุญููุฉ ูุงูุฃูุงูุ ุงูุญูุฏููู ุงููุณุฑ ุงูุญุฑ ุดูู",
                'forum': 'almrsal',
                'timestamp': datetime.now().isoformat(),
                'replies': 15
            },
            {
                'content': "ุงุจุบู ุงุณุงูุฑ ุฎุงุฑุฌ ุงูููููุฉุ ูุด ุชูุตุญููู ูู ุงูุฏููุ",
                'forum': 'travel_ksa',
                'timestamp': datetime.now().isoformat(),
                'replies': 23
            },
            {
                'content': "ุงูุญูุฏููู ุฎูุตุช ุงูุฌุงูุนุฉ ุงุฎูุฑุงูุ ุงุฏุนููู ุงุดุชุบู ุดุบู ุฒูู",
                'forum': 'graduates',
                'timestamp': datetime.now().isoformat(),
                'replies': 7
            }
        ]
        
        for post in sample_forum_posts:
            collected_data.append({
                'platform': 'forum',
                'content': post['content'],
                'timestamp': post['timestamp'],
                'engagement': post['replies'],
                'location': 'Saudi Arabia',
                'source_url': f"https://www.{post['forum']}.com"
            })
        
        self.logger.info(f"ุชู ุฌูุน {len(collected_data)} ููุดูุฑ ูู ุงูููุชุฏูุงุช")
        return collected_data
    
    def collect_all_sources(self, max_per_source: int = 100) -> List[Dict]:
        """ุฌูุน ุงูุจูุงูุงุช ูู ุฌููุน ุงููุตุงุฏุฑ"""
        all_data = []
        
        print("๐ ุจุฏุก ุฌูุน ุงูุจูุงูุงุช ูู ุฌููุน ุงููุตุงุฏุฑ...")
        
        try:
            # ุฌูุน ูู ุชููุชุฑ
            print("๐ฑ ุฌูุน ูู Twitter...")
            twitter_data = self.collect_from_twitter_api(
                keywords=self.saudi_keywords[:5], 
                max_results=min(max_per_source, 8)  # ุญุฏ ุฃูุตู ููุจูุงูุงุช ุงูุชุฌุฑูุจูุฉ
            )
            all_data.extend(twitter_data)
            
            # ุฌูุน ูู Reddit
            print("๐ด ุฌูุน ูู Reddit...")
            reddit_data = self.collect_from_reddit(max_posts=min(max_per_source, 5))
            all_data.extend(reddit_data)
            
            # ุฌูุน ูู ุงูููุชุฏูุงุช
            print("๐ฌ ุฌูุน ูู ุงูููุชุฏูุงุช...")
            forum_data = self.collect_from_forums()
            all_data.extend(forum_data)
            
            # ุชุทุจูู ุงูุชุตููุฉ
            filtered_data = []
            for item in all_data:
                if self.filter_saudi_content(item['content']):
                    item['content_hash'] = hashlib.md5(
                        item['content'].encode('utf-8')
                    ).hexdigest()
                    filtered_data.append(item)
            
            print(f"โ ุชู ุฌูุน {len(all_data)} ุนูุตุฑุ ูุชูุช ุชุตููุฉ {len(filtered_data)} ุนูุตุฑ ููุงุณุจ")
            self.logger.info(f"ุฌูุน ุงูุจูุงูุงุช: {len(all_data)} ุงูููุ {len(filtered_data)} ูุตูู")
            
            return filtered_data
            
        except Exception as e:
            self.logger.error(f"ุฎุทุฃ ูู ุฌูุน ุงูุจูุงูุงุช: {str(e)}")
            print(f"โ ุฎุทุฃ ูู ุฌูุน ุงูุจูุงูุงุช: {str(e)}")
            return []
    
    def filter_saudi_content(self, content: str) -> bool:
        """ุชุตููุฉ ุงููุญุชูู ููุชุฃูุฏ ูู ุฃูู ุจุงูููุฌุฉ ุงูุณุนูุฏูุฉ"""
        content_lower = content.lower()
        
        # ูุญุต ุงููููุงุช ุงูููุชุงุญูุฉ ุงูุณุนูุฏูุฉ
        saudi_word_count = sum(1 for keyword in self.saudi_keywords 
                              if keyword.lower() in content_lower)
        
        # ุฅุฐุง ูุฌุฏ ูููุฉ ูุงุญุฏุฉ ุฃู ุฃูุซุฑ ูู ุงููููุงุช ุงูุณุนูุฏูุฉ
        return saudi_word_count >= 1
    
    def close(self):
        """ุฅุบูุงู ุงูุงุชุตุงูุงุช"""
        # ูุง ุชูุฌุฏ ุงุชุตุงูุงุช ููุฅุบูุงู ูู ุงููุณุฎุฉ ุงููุจุณุทุฉ
        self.logger.info("ุชู ุฅุบูุงู ุฌุงูุน ุงูุจูุงูุงุช")

if __name__ == "__main__":
    collector = SocialMediaCollector()
    
    try:
        # ุงุฎุชุจุงุฑ ุฌูุน ุงูุจูุงูุงุช
        collected_data = collector.collect_all_sources(max_per_source=10)
        
        # ุนุฑุถ ุงููุชุงุฆุฌ
        print(f"\n๐ ุชู ุฌูุน {len(collected_data)} ุนูุตุฑ ุฅุฌูุงููุงู")
        
        if collected_data:
            print("\n๐ ุนููุฉ ูู ุงูุจูุงูุงุช ุงููุฌูุนุฉ:")
            for i, item in enumerate(collected_data[:5]):
                print(f"   {i+1}. [{item['platform']}] {item['content'][:60]}...")
                
        # ุญูุธ ุงูุจูุงูุงุช (ุงุฎุชูุงุฑู)
        with open(f"collected_sample_{datetime.now().strftime('%Y%m%d_%H%M')}.json", 'w', encoding='utf-8') as f:
            json.dump(collected_data, f, ensure_ascii=False, indent=2)
        
        print(f"\n๐พ ุชู ุญูุธ ุงูุจูุงูุงุช ูู ููู JSON")
        
    finally:
        collector.close()